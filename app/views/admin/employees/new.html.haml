
%script{:type => "text/javascript"}
  function checkNINO (toCheck) {

  var exp1 = /^[A-CEGHJ-NOPR-TW-Z]{1}[A-CEGHJ-NPR-TW-Z]{1}[0-9]{6}[A-D\s]{1}/i;
  var exp2 = /(^GB)|(^BG)|(^NK)|(^KN)|(^TN)|(^NT)|(^ZZ).+/i;
	
  if (toCheck.match(exp1) && !toCheck.match(exp2)) 
  {

  return toCheck.toUpperCase() 
  }
  else{

  return false;
  }
  }

  function testNINO () {
  var myNINO = document.getElementById('employ_tax_id').value;
  if (checkNINO (myNINO)) {
  document.getElementById('employ_tax_id').value = checkNINO (myNINO);
  return true;
  } 
  else {alert ("National Insurance Number has invalid format"); document.getElementById('employ_tax_id').focus(); return false;}
  }  
  
.box.contact

  %h2 New Employee
  = form_for @emp, :url =>{:action => :create},:html => {:multipart => :true,:onSubmit => "return testNINO();"} do |c|
    = render "shared/error_messages", :target => @emp
    //%h3 Details
    = c.text_field :title
    = c.text_field :first_name 
    = c.text_field :last_name
    = c.text_field :email
    = c.text_field :mobile

    %h3 Job Details
    = c.select :department_id, @departments.map {|u| [u.name,u.id]},:label => "Select Department"
    = c.text_field :tax_id,:label => "Employee ID"
    = c.text_field :job_title,:label => "Job Title"     

    = c.text_field :salary,:label => "Salary (in $)"
    = c.text_field :reports_to,:label => "Reports To"
    
    %h3 Personal Information
    = c.date_select :dob, :start_year => 1950 , :end_year => 2000, :label => "Date of Birth"
    = c.file_field :passport
    = c.date_select :date_of_join, :start_year => 1950 , :end_year => 2011, :label => "Date of Join"




    %br/
    = c.submit "Create Employee"